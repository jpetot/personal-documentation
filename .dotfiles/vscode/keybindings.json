// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "cmd+f1",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile"
    },
    {
        "key": "shift+cmd+n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "cmd+down",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "nextBlankLine",
            "by": "wrappedLine"
        }
    },
    {
        "key": "cmd+up",
        "command": "cursorMove",
        "when": "editorTextFocus",
        "args": {
            "to": "prevBlankLine",
            "by": "wrappedLine"
        }
    },
    {
        "key": "cmd+alt+left",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "cmd+alt+right",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "shift+cmd+r",
        "command": "pylance.extractMethod"
    },
    {
        "key": "shift+cmd+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+cmd+[Period]",
        "command": "breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "cmd+[Period]",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "cmd+[Period]",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+shift+alt+cmd+[Period]",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k shift+cmd+left",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "cmd+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "cmd+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "cmd+k shift+cmd+right",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "cmd+k",
        "command": "terminal.focus"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+y",
        "command": "workbench.view.testing.focus"
    },
    {
        "key": "cmd+y",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "shift+cmd+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "alt+cmd+g",
        "command": "gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+cmd+g [KeyM]",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+cmd+g",
        "command": "gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+cmd+g [KeyM]",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+cmd+g",
        "command": "gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+cmd+g [KeyM]",
        "command": "-gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "shift+cmd+u",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "shift+cmd+u",
        "command": "workbench.action.debug.selectandstart"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "workbench.action.toggleMultiCursorModifier"
    },
    {
        "key": "tab",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "shift+cmd+r",
        "command": "pylance.extractMethodWithRename"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "shift+cmd+b",
        "command": "workbench.action.closePanel"
    },
    {
        "key": "cmd+l",
        "command": "python.viewOutput"
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    }
]